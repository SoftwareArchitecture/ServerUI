package at.ac.tuwien.softwareArchitecture.SWAzam.view;

import java.util.List;

import org.jsoup.nodes.TextNode;

import at.ac.tuwien.softwarearchitecture.swazam.common.infos.Account;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.TextField;

public class EditView extends CustomComponent implements View{

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	public static final String NAME = "edit";
	JerseyClient jc = new JerseyClient();
	
	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button button_2;
	@AutoGenerated
	private Button button_1;
	@AutoGenerated
	private Table table_1;
	@AutoGenerated
	private Label label_1;
	
	private TextField tf_username;
	private TextField tf_password;
	private TextField tf_Firstname;
	private TextField tf_Lastname;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public EditView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("150px");
		label_1.setHeight("-1px");
		label_1.setValue("Edit User Data");
		mainLayout.addComponent(label_1, "top:40.0px;left:150.0px;");
		
		// table_1
		table_1 = new Table();
		table_1.setWidth("539px");
		table_1.setHeight("180px");
		// Allow selecting items from the table.
		table_1.setSelectable(true);

		// Send changes in selection immediately to server.
		table_1.setImmediate(true);
		table_1.addContainerProperty("id", Integer.class,  null);
		table_1.addContainerProperty("username", String.class,  null);
		table_1.addContainerProperty("First Name", String.class,  null);
		table_1.addContainerProperty("Last Name", String.class,  null);
		table_1.addContainerProperty("Coins", Integer.class,  null);
		table_1.addValueChangeListener(new Property.ValueChangeListener() {
		    public void valueChange(ValueChangeEvent event) {
		    	if (table_1.getValue() != null)
		    	{
			    	int id = Integer.parseInt(table_1.getValue().toString());
			    	tf_username.setValue(table_1.getItem(id).getItemProperty("username").getValue().toString());
			    	//tf_password.setValue(table_1.getItem(id).getItemProperty(2).toString());
			    	tf_Firstname.setValue(table_1.getItem(id).getItemProperty("First Name").getValue().toString());
			    	tf_Lastname.setValue(table_1.getItem(id).getItemProperty("Last Name").getValue().toString());
		    	}
		    }
		});
		mainLayout.addComponent(table_1, "top:120.0px;left:50.0px;");
		
		// button_1
		button_1 = new Button("Save", new Button.ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				// TODO Auto-generated method stub
				int id = Integer.parseInt(table_1.getValue().toString());
				
				
				jc.updateAccount(id, tf_username.getValue(), tf_password.getValue(), 
						tf_Firstname.getValue(), tf_Lastname.getValue(), 
						getSession().getAttribute("sessionKey").toString());
				computeTable();
				tf_username.setValue("");
				tf_password.setValue("");
				tf_Firstname.setValue("");
				tf_Lastname.setValue("");
			}
		});
		button_1.setCaption("Save");
		button_1.setImmediate(false);
		button_1.setWidth("-1px");
		button_1.setHeight("-1px");
		mainLayout.addComponent(button_1, "top:340.0px;left:100.0px;");
		
		// button_2
		button_2 = new Button("Back to Main", new Button.ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				// TODO Auto-generated method stub
				getUI().getNavigator().navigateTo(MainView.NAME);
			}
		});
		button_2.setCaption("Back to Main");
		button_2.setImmediate(false);
		button_2.setWidth("-1px");
		button_2.setHeight("-1px");
		mainLayout.addComponent(button_2, "top:340.0px;left:355.0px;");
		
		tf_username = new TextField("Username: ");
		tf_username.setEnabled(false);
		mainLayout.addComponent(tf_username, "top:400.0px;left:355.0px;");
		
		tf_password = new TextField("Password: ");
		mainLayout.addComponent(tf_password, "top:450.0px;left:355.0px;");
		
		tf_Firstname = new TextField("Firstname: ");
		mainLayout.addComponent(tf_Firstname, "top:500.0px;left:355.0px;");
		
		tf_Lastname = new TextField("Lastname: ");
		mainLayout.addComponent(tf_Lastname, "top:550.0px;left:355.0px;");
		
		return mainLayout;
	}

	@Override
	public void enter(ViewChangeEvent event) {
		// TODO Auto-generated method stub
		computeTable();
	}
	
	private void computeTable() {
		table_1.removeAllItems();
		List<Account> accountlist = jc.list();
		for (Account account : accountlist) {
			table_1.addItem(new Object[] {
				    account.getId(),account.getUsername(),account.getFirstname(),account.getLastname(),account.getCoin()}, account.getId());
		}
	}
}
